generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Usuario {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  username      String    @unique
  nome          String
  senha         String
  created_at    DateTime  @default(now())
  updated_at    DateTime  @updatedAt
  id_tipo_login Int
  tipo_login    TipoLogin @relation(fields: [id_tipo_login], references: [id])
}

model TipoLogin {
  id        Int       @id @default(autoincrement())
  descricao String
  key       String    @unique
  Usuario   Usuario[]
}

model PermissaoUsuario {
  id           Int       @id @default(autoincrement())
  id_usuario   Int
  id_permissao Int
  permissao    Permissao @relation(fields: [id_permissao], references: [id])
}

model RegraPermissao {
  id           Int       @id @default(autoincrement())
  id_permissao Int
  id_regra     Int
  permissao    Permissao @relation(fields: [id_permissao], references: [id])
  regra        Regra     @relation(fields: [id_regra], references: [id])
}

model Permissao {
  id               Int                @id @default(autoincrement())
  descricao        String
  key              String             @unique
  PermissaoUsuario PermissaoUsuario[]
  RegraPermissao   RegraPermissao[]
}

model Regra {
  id             Int              @id @default(autoincrement())
  descricao      String
  key            String           @unique
  RegraPermissao RegraPermissao[]
}

model Curso {
  id        Int     @id @default(autoincrement())
  nome      String
  descricao String
  key       String  @unique
  bloco     Bloco[]
}

model Bloco {
  id            Int            @id @default(autoincrement())
  id_curso      Int
  key           Int            @unique
  curso         Curso          @relation(fields: [id_curso], references: [id], onDelete: Cascade)
  materia_bloco MateriaBloco[]

  @@unique([id_curso, key])
}

model Materia {
  id            Int            @id @default(autoincrement())
  nome          String
  descricao     String
  key           String         @unique
  materia_bloco MateriaBloco[]
}

model MateriaBloco {
  id         Int       @id @default(autoincrement())
  id_bloco   Int
  id_materia Int
  bloco      Bloco     @relation(fields: [id_bloco], references: [id], onDelete: Cascade)
  meteria    Materia   @relation(fields: [id_materia], references: [id], onDelete: Cascade)
  questao    Questao[]

  @@unique([id_bloco, id_materia])
}

model Questao {
  id                  Int          @id @default(autoincrement())
  id_materia_bloco    Int
  questao_texto       String
  questao_a           String
  questao_b           String
  questao_c           String
  questao_d           String
  alternativa_correta String
  key                 String       @unique
  descricao           String?
  materia_bloco       MateriaBloco @relation(fields: [id_materia_bloco], references: [id], onDelete: Cascade)
}
